name_theme = "Условные конструкции (в разработке)"
questions_dict = {
    0: {
        "question": "Какой из следующих операторов используется для сравнения двух значений?",
        "answer_1": "=",
        "answer_2": "==",
        "answer_3": "===",
        "answer_4": "!=",
        "answer_5": "<>",
        "valid": "answer_2",
        "explanation": (
            "Оператор '==' используется для проверки равенства двух значений. "
            "Если два значения равны, он вернет True, в противном случае — False. "
            "Пример: 5 == 5 вернет True. "
            "Другой пример: 'abc' == 'abc' также вернет True. "
            "Однако 5 == '5' вернет True, так как Python автоматически преобразует строку в число для сравнения."
        )
    },
    1: {
        "question": "Какой будет результат выполнения выражения (5 > 3) and (3 < 2)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Выражение (5 > 3) возвращает True, так как 5 действительно больше 3. "
            "Однако (3 < 2) возвращает False, так как 3 не меньше 2. "
            "Поскольку оператор and требует, чтобы оба условия были истинны, результат всего выражения будет False. "
            "Пример: (7 > 2) and (4 < 5) вернет True, так как оба условия истинны."
        )
    },
    2: {
        "question": "Какой оператор используется для отрицания логического значения?",
        "answer_1": "not",
        "answer_2": "!",
        "answer_3": "not equal",
        "answer_4": "negate",
        "answer_5": "no",
        "valid": "answer_1",
        "explanation": (
            "Оператор 'not' используется для инвертирования логического значения. "
            "Если значение True, то not True вернет False, и наоборот. "
            "Пример: not False вернет True. "
            "Другой пример: если x = True, то not x вернет False. "
            "Это полезно в условных выражениях, например: if not condition: ..."
        )
    },
    3: {
        "question": "Какой будет результат выполнения выражения (True or False) and (False or True)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Выражение (True or False) возвращает True, так как хотя бы одно из условий истинно. "
            "Также (False or True) возвращает True по той же причине. "
            "Таким образом, выражение True and True дает True. "
            "Пример: (False or True) and (True or False) также вернет True."
        )
    },
    4: {
        "question": "Какой результат выполнения следующего кода: x = 10; if x > 5: print(\"Больше 5\")?",
        "answer_1": "10",
        "answer_2": "Больше 5",
        "answer_3": "Ошибка",
        "answer_4": "5",
        "answer_5": "None",
        "valid": "answer_2",
        "explanation": (
            "Условие x > 5 истинно, так как 10 больше 5, поэтому будет выведено 'Больше 5'. "
            "Если бы x было равно 5 или меньше, ничего бы не выведено. "
            "Пример: если x = 4, то print(\"Больше 5\") не выполнится. "
            "Другой пример: x = 6 выведет 'Больше 5', так как 6 больше 5."
        )
    },
    5: {
        "question": "Какой будет результат выполнения выражения not (5 == 5)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "5 == 5 возвращает True, так как оба значения равны. "
            "Оператор not инвертирует это значение, поэтому not True возвращает False. "
            "Пример: not (3 > 5) вернет True, так как 3 не больше 5. "
            "Другой пример: not (x < 10), если x равно 5, вернет False, так как 5 меньше 10."
        )
    },
    6: {
        "question": "Какой из следующих операторов используется для проверки неравенства?",
        "answer_1": "!=",
        "answer_2": "==",
        "answer_3": "<>",
        "answer_4": "not equal",
        "answer_5": "equal",
        "valid": "answer_1",
        "explanation": (
            "Оператор '!=' используется для проверки, не равны ли два значения. "
            "Если значения не равны, он возвращает True, в противном случае — False. "
            "Пример: 5 != 3 вернет True, так как 5 не равно 3. "
            "Другой пример: 4 != 4 вернет False, так как 4 равно 4."
        )
    },
    7: {
        "question": "Какой результат выполнения следующего кода: x = 4; if x < 5: print(\"Меньше 5\") else: print(\"Не меньше 5\")?",
        "answer_1": "Меньше 5",
        "answer_2": "Не меньше 5",
        "answer_3": "4",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Условие x < 5 истинно, так как 4 меньше 5, поэтому будет выведено 'Меньше 5'. "
            "Если бы x было 5 или больше, то вывелось бы 'Не меньше 5'. "
            "Пример: если x = 5, то будет выведено 'Не меньше 5'. "
            "Другой пример: если x = 6, то также будет выведено 'Не меньше 5'."
        )
    },

    8: {
        "question": "Какой будет результат выполнения выражения (True and False) or (False and True)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Оба условия (True and False) и (False and True) возвращают False, поэтому результат всего выражения будет False. "
            "Логическое выражение and возвращает True только если оба операнда истинны, а or возвращает True, если хотя бы один из операндов истинный. "
            "В данном случае, так как оба условия возвращают False, итоговое значение будет False. "
            "Пример: (True and True) or (False and False) вернет True, так как первое условие истинно."
        )
    },
    9: {
        "question": "Что будет выведено на экран при выполнении следующего кода: if True: print(\"Всегда выводится\")?",
        "answer_1": "Всегда выводится",
        "answer_2": "Ошибка",
        "answer_3": "Не выводится",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Условие True всегда истинно, поэтому будет выведено 'Всегда выводится'. "
            "В Python любой код, который находится в теле if, будет выполнен, если условие истинно. "
            "Пример: if False: print(\"Не выводится\") не выведет ничего, так как условие ложно."
        )
    },
    10: {
        "question": "Какой результат выполнения выражения (10 > 5) or (3 > 7)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Условие (10 > 5) истинно, поэтому результат всего выражения будет True. "
            "Логическое выражение or возвращает True, если хотя бы одно из условий истинно. "
            "В данном случае, так как первое условие истинно, второе не влияет на итоговый результат. "
            "Пример: (1 < 2) or (3 < 4) вернет True, так как оба условия истинны."
        )
    },
    11: {
        "question": "Какой результат выполнения следующего кода: x = -1; if x: print(\"Истинно\")?",
        "answer_1": "Истинно",
        "answer_2": "Не выводится",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "В Python любое ненулевое число считается истинным, поэтому будет выведено 'Истинно'. "
            "Условие if x проверяет, является ли x истинным значением, и так как -1 является ненулевым числом, оно считается истинным. "
            "Пример: если x = 0, то print(\"Истинно\") не выполнится, так как 0 считается ложным значением. "
            "Другой пример: if x = 5: print(\"Истинно\") также вернет 'Истинно', так как 5 ненулевое."
        )
    },
    12: {
        "question": "Что будет выведено на экран при выполнении следующего кода: x = 0; if not x: print(\"Ложь\")?",
        "answer_1": "Истинно",
        "answer_2": "Ложь",
        "answer_3": "0",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_2",
        "explanation": (
            "Поскольку x равно 0, not x будет True, и будет выведено 'Ложь'. "
            "В Python нулевые значения, такие как 0, пустые строки и пустые списки, считаются ложными. "
            "Пример: if not 5: не выведет ничего, так как 5 — истинное значение. "
            "Другой пример: if not '': также вернет True, так как пустая строка считается ложной."
        )
    },
    13: {
        "question": "Какой из следующих логических операторов возвращает True только если оба операнда истинны?",
        "answer_1": "or",
        "answer_2": "and",
        "answer_3": "not",
        "answer_4": "xor",
        "answer_5": "!=",
        "valid": "answer_2",
        "explanation": (
            "Оператор 'and' возвращает True только если оба операнда истинны. "
            "Если хотя бы один из операндов ложен, результат будет False. "
            "Пример: (True and True) вернет True, а (True and False) вернет False. "
            "Другой пример: (5 > 3 and 2 < 4) вернет True, так как оба условия истинны."
        )
    },
    14: {
        "question": "Какой результат выполнения следующего кода: x = 5; if x > 3 and x < 10: print(\"В диапазоне\")?",
        "answer_1": "В диапазоне",
        "answer_2": "Не выводится",
        "answer_3": "5",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Оба условия x > 3 и x < 10 истинны, поэтому будет выведено 'В диапазоне'. "
            "Пример: если x = 2, то ничего не будет выведено, так как первое условие ложно. "
            "Другой пример: если x = 12, то также не будет выведено ничего, так как второе условие ложно."
        )
    },
    15: {
        "question": "Какой будет результат выполнения выражения (False or True) and (not False)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "False or True возвращает True, так как одно из условий истинно. "
            "not False возвращает True, поэтому всё выражение становится True and True, что в итоге дает True. "
            "Пример: (True or False) and (not True) вернет False, так как not True дает False. "
            "Другой пример: (5 > 3 or 2 < 1) and (not 0) также вернет True, так как 5 > 3 истинно."
        )
    },
    16: {
        "question": "Какой метод используется для проверки, существует ли значение в списке?",
        "answer_1": "in",
        "answer_2": "contains",
        "answer_3": "exists",
        "answer_4": "has",
        "answer_5": "find",
        "valid": "answer_1",
        "explanation": (
            "Оператор 'in' используется для проверки наличия значения в списке. "
            "Если значение присутствует в списке, выражение вернет True, иначе — False. "
            "Пример: если есть список numbers = [1, 2, 3], то 2 in numbers вернет True. "
            "Другой пример: 4 in numbers вернет False, так как 4 отсутствует в списке."
        )
    },
    17: {
        "question": "Какой будет результат выполнения следующего кода: x = 3; if x == 3: print(\"Равно 3\")?",
        "answer_1": "Равно 3",
        "answer_2": "Не выводится",
        "answer_3": "3",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Условие x == 3 истинно, так как x действительно равно 3, поэтому будет выведено 'Равно 3'. "
            "Пример: если бы x = 2, то ничего бы не вывелось, так как условие ложно. "
            "Другой пример: если x = 3 и мы изменим условие на x == 4, то результат будет 'Не выводится'."
        )
    },
    18: {
        "question": "Какой будет результат выполнения выражения 3 < 2 or 5 > 4?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Условие 5 > 4 истинно, поэтому результат всего выражения будет True, так как оператор or возвращает True, "
            "если хотя бы одно из условий истинно. "
            "Пример: 2 < 1 or 3 > 0 также вернет True, так как 3 > 0 истинно. "
            "Другой пример: 1 > 2 or 2 > 3 вернет False, так как оба условия ложны."
        )
    },
    19: {
        "question": "Какой результат выполнения следующего кода: if 1: print(\"Истинно\")?",
        "answer_1": "Истинно",
        "answer_2": "Не выводится",
        "answer_3": "1",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "В Python любое ненулевое число считается истинным, поэтому будет выведено 'Истинно'. "
            "Условие if 1 истинно, так как 1 — это ненулевое значение. "
            "Пример: if 0: ничего не будет выведено, так как 0 считается ложным. "
            "Другой пример: if -1: будет выведено 'Истинно', так как -1 также считается истинным."
        )
    },
    20: {
        "question": "Какой оператор используется для проверки, является ли один объект подмножеством другого?",
        "answer_1": "in",
        "answer_2": "issubset()",
        "answer_3": "subset",
        "answer_4": "not in",
        "answer_5": "is",
        "valid": "answer_2",
        "explanation": (
            "Метод issubset() используется для проверки, является ли одно множество подмножеством другого. "
            "Если все элементы одного множества присутствуют в другом, то первое множество является подмножеством второго. "
            "Пример: set1 = {1, 2}, set2 = {1, 2, 3}; set1.issubset(set2) вернет True. "
            "Другой пример: set3 = {1, 4}; set3.issubset(set2) вернет False, так как 4 отсутствует в set2."
        )
    },
    21: {
        "question": "Какой будет результат выполнения выражения (not True) and (5 == 5)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "not True возвращает False, так как оператор not инвертирует истинное значение. "
            "Следовательно, выражение False and True вернет False, так как оператор and требует, чтобы оба операнда были истинны. "
            "Пример: (not False) and (3 > 2) вернет True, так как оба условия истинны. "
            "Другой пример: (not True) or (5 > 3) вернет True, так как одно из условий истинно."
        )
    },
    22: {
        "question": "Какой результат выполнения следующего кода: x = 10; if x >= 10: print(\"Не меньше 10\")?",
        "answer_1": "Не меньше 10",
        "answer_2": "Не выводится",
        "answer_3": "10",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Условие x >= 10 истинно, так как x равно 10, поэтому будет выведено 'Не меньше 10'. "
            "Пример: если x = 5, то ничего не будет выведено, так как условие ложно. "
            "Другой пример: если x = 15, то также будет выведено 'Не меньше 10', так как 15 больше 10."
        )
    },
    23: {
        "question": "Какой будет результат выполнения выражения 'Hello' == 'hello'?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Сравнение строк учитывает регистр, поэтому 'Hello' не равно 'hello'. "
            "Методы строк в Python чувствительны к регистру, и это означает, что заглавные и строчные буквы считаются разными символами. "
            "Пример: 'Python' == 'python' вернет False, так как первая буква в первой строке заглавная. "
            "Другой пример: 'abc' == 'abc' вернет True, так как строки идентичны."
        )
    },
    24: {
        "question": "Какой будет результат выполнения следующего кода: if False: print(\"Не выводится\") else: print(\"Выводится\")?",
        "answer_1": "Не выводится",
        "answer_2": "Выводится",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Условие False ложно, поэтому будет выполнен блок else и выведено 'Выводится'. "
            "В Python, если условие if истинно, выполняется код в блоке if; если ложно, выполняется код в блоке else. "
            "Пример: if True: print('Это будет выведено') выполнит код, так как условие истинно. "
            "Другой пример: if 0: print('Не будет выведено'), так как 0 считается ложным."
        )
    },
    25: {
        "question": "Какой результат выполнения выражения (3 >= 3) and (4 < 2)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Первое условие (3 >= 3) истинно, так как 3 равно 3. "
            "Однако второе условие (4 < 2) ложно, так как 4 не меньше 2. "
            "Оператор and возвращает True только если оба условия истинны, поэтому результат всего выражения будет False. "
            "Пример: (5 > 3) and (2 < 4) вернет True, так как оба условия истинны."
        )
    },
    26: {
        "question": "Какой результат выполнения следующего кода: x = 8; if x % 2 == 0: print(\"Четное\")?",
        "answer_1": "Четное",
        "answer_2": "Нечетное",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Условие x % 2 == 0 истинно для четных чисел, так как остаток от деления четного числа на 2 равен 0. "
            "В данном случае, так как x равно 8, вывод будет 'Четное'. "
            "Пример: если x = 7, то x % 2 == 0 будет ложным, и ничего не будет выведено. "
            "Другой пример: x = 10 вернет 'Четное', так как 10 делится на 2 без остатка."
        )
    },
    27: {
        "question": "Какой оператор используется для объединения логических выражений?",
        "answer_1": "and",
        "answer_2": "or",
        "answer_3": "not",
        "answer_4": "both",
        "answer_5": "combine",
        "valid": "answer_2",
        "explanation": (
            "Оператор 'or' используется для объединения логических выражений, возвращая True, если хотя бы одно из них истинно. "
            "Это полезно, когда нужно проверить несколько условий одновременно. "
            "Пример: (True or False) вернет True, так как первое условие истинно. "
            "Другой пример: (False or False) вернет False, так как оба условия ложны."
        )
    },
    28: {
        "question": "Какой результат выполнения выражения (2 < 3) or (5 > 7)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Первое условие (2 < 3) истинно, поэтому результат всего выражения будет True, "
            "так как оператор or возвращает True, если хотя бы одно из условий истинно. "
            "Пример: (5 > 4) or (3 < 1) также вернет True, так как первое условие истинно. "
            "Другой пример: (1 > 2) or (3 > 4) вернет False, так как оба условия ложны."
        )
    },
    29: {
        "question": "Какой будет результат выполнения следующего кода: x = 5; if x == 5: print(\"Оно равно\") else: print(\"Не равно\")?",
        "answer_1": "Оно равно",
        "answer_2": "Не равно",
        "answer_3": "5",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Условие x == 5 истинно, так как x действительно равно 5, поэтому будет выведено 'Оно равно'. "
            "Если бы x было равно 4, то ничего бы не выведено, так как условие ложно. "
            "Пример: если x = 10, то будет выведено 'Не равно', так как 10 не равно 5."
        )
    },
    30: {
        "question": "Какой оператор используется для проверки, является ли переменная пустой?",
        "answer_1": "is",
        "answer_2": "empty",
        "answer_3": "None",
        "answer_4": "==",
        "answer_5": "not",
        "valid": "answer_1",
        "explanation": (
            "Оператор 'is' может использоваться для проверки, является ли переменная None или пустой. "
            "Этот оператор проверяет, ссылается ли переменная на тот же объект, что и другой объект. "
            "Пример: if x is None: означает, что x не имеет значения. "
            "Другой пример: if my_list is []: не сработает как ожидается, так как это проверка на идентичность, "
            "вместо этого нужно использовать if not my_list: для проверки, является ли список пустым."
        )
    },
    31: {
        "question": "Какой результат выполнения выражения (not (5 < 3))?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "5 < 3 возвращает False, а not False возвращает True. "
            "Таким образом, результатом выражения будет True, так как оператор not инвертирует логическое значение. "
            "Пример: if not (1 == 1): ничего не будет выведено, так как условие ложно. "
            "Другой пример: not (2 > 5) вернет True, так как 2 не больше 5."
        )
    },
    32: {
        "question": "Какой будет результат выполнения следующего кода: if 0: print(\"Истинно\") else: print(\"Ложь\")?",
        "answer_1": "Истинно",
        "answer_2": "Ложь",
        "answer_3": "0",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_2",
        "explanation": (
            "0 в Python считается ложным значением, поэтому будет выведено 'Ложь'. "
            "В Python нулевые значения, такие как 0, пустые строки и пустые списки, считаются ложными. "
            "Пример: if -1: выведет 'Истинно', так как -1 — это ненулевое значение. "
            "Другой пример: if '': ничего не будет выведено, так как пустая строка считается ложной."
        )
    },
    33: {
        "question": "Какой результат выполнения выражения (10 != 10) or (5 > 3)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Первое условие (10 != 10) ложно, так как 10 равно 10, но второе (5 > 3) истинно. "
            "Оператор or возвращает True, если хотя бы одно из условий истинно, поэтому результат всего выражения будет True. "
            "Пример: (5 > 4) or (3 < 1) также вернет True, так как первое условие истинно. "
            "Другой пример: (1 > 2) or (3 > 4) вернет False, так как оба условия ложны."
        )
    },
    34: {
        "question": "Какой оператор используется для проверки, является ли один список подмножеством другого?",
        "answer_1": "in",
        "answer_2": "issubset()",
        "answer_3": "subset",
        "answer_4": "not in",
        "answer_5": "is",
        "valid": "answer_2",
        "explanation": (
            "Метод issubset() используется для проверки, является ли одно множество подмножеством другого. "
            "Если все элементы одного множества присутствуют в другом, то первое множество является подмножеством второго. "
            "Пример: set1 = {1, 2}, set2 = {1, 2, 3}; set1.issubset(set2) вернет True. "
            "Другой пример: set3 = {1, 4}; set3.issubset(set2) вернет False, так как 4 отсутствует в set2."
        )
    },
    35: {
        "question": "Какой результат выполнения следующего кода: if True and False: print(\"Истинно\") else: print(\"Ложь\")?",
        "answer_1": "Истинно",
        "answer_2": "Ложь",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Условие True and False ложно, так как оператор and возвращает True только если оба операнда истинны. "
            "В данном случае, так как одно из условий ложно, будет выведено 'Ложь'. "
            "Пример: (True and True) вернет True, так как оба условия истинны. "
            "Другой пример: (False and True) вернет False, так как первое условие ложно."
        )
    },
    36: {
        "question": "Какой будет результат выполнения выражения (5 < 3) and (7 > 2)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Первое условие (5 < 3) ложно, так как 5 не меньше 3. "
            "Второе условие (7 > 2) истинно, но оператор and требует, чтобы оба условия были истинны. "
            "Следовательно, результат всего выражения будет False. "
            "Пример: (10 > 5) and (3 < 4) вернет True, так как оба условия истинны. "
            "Другой пример: (2 > 3) and (4 < 5) вернет False, так как первое условие ложно."
        )
    },
    37: {
        "question": "Какой результат выполнения следующего кода: if 1 == 1: print(\"Готово\")?",
        "answer_1": "Готово",
        "answer_2": "Не выводится",
        "answer_3": "1",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Условие 1 == 1 истинно, поэтому будет выведено 'Готово'. "
            "В Python, если условие if истинно, выполняется код в блоке if. "
            "Пример: if 2 > 1: print('Истинно') выведет 'Истинно', так как 2 больше 1. "
            "Другой пример: if 0: ничего не будет выведено, так как 0 считается ложным."
        )
    },
    38: {
        "question": "Какой будет результат выполнения выражения (True or False) and (False or False)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Выражение (True or False) возвращает True, так как одно из условий истинно. "
            "Однако (False or False) возвращает False, так как оба условия ложны. "
            "Оператор and требует, чтобы оба условия были истинны, поэтому итоговое значение будет False. "
            "Пример: (False or True) and (True or False) вернет True, так как первое условие истинно."
        )
    },
    39: {
        "question": "Какой будет результат выполнения следующего кода: x = -5; if x < 0: print(\"Отрицательное\")?",
        "answer_1": "Отрицательное",
        "answer_2": "Положительное",
        "answer_3": "0",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Условие x < 0 истинно, так как -5 действительно меньше 0, поэтому будет выведено 'Отрицательное'. "
            "Пример: если x = 5, то вывод будет 'Не выводится', так как условие ложно. "
            "Другой пример: если x = 0, то также ничего не будет выведено, так как 0 не меньше 0."
        )
    },
    40: {
        "question": "Какой результат выполнения выражения not (5 > 10)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "5 > 10 возвращает False, так как 5 не больше 10, а оператор not инвертирует это значение. "
            "Таким образом, not False возвращает True. "
            "Пример: not (3 < 5) вернет False, так как 3 меньше 5. "
            "Другой пример: not (10 == 10) вернет False, так как 10 равно 10."
        )
    },
    41: {
        "question": "Какой оператор используется для проверки, является ли переменная не None?",
        "answer_1": "is not",
        "answer_2": "not",
        "answer_3": "is",
        "answer_4": "!=",
        "answer_5": "==",
        "valid": "answer_1",
        "explanation": (
            "Оператор 'is not' используется для проверки, что переменная не равна None. "
            "Это полезно для проверки, назначено ли значение переменной. "
            "Пример: if x is not None: выполнит код, если x имеет значение. "
            "Другой пример: if my_list is not []: проверит, не пустой ли список."
        )
    },
    42: {
        "question": "Какой результат выполнения следующего кода: x = 12; if x % 2 == 0: print(\"Четное\")?",
        "answer_1": "Четное",
        "answer_2": "Нечетное",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Условие x % 2 == 0 истинно для четных чисел, так как остаток от деления четного числа на 2 равен 0. "
            "В данном случае, так как x равно 12, вывод будет 'Четное'. "
            "Пример: если x = 7, то x % 2 == 0 будет ложным, и ничего не будет выведено. "
            "Другой пример: если x = 10, то также будет выведено 'Четное', так как 10 делится на 2 без остатка."
        )
    },
    43: {
        "question": "Какой будет результат выполнения выражения (not True) and (not False)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "not True возвращает False, а not False возвращает True. "
            "Таким образом, результат выражения будет False, так как оператор and требует, чтобы оба условия были истинны. "
            "Пример: (True and True) вернет True, так как оба условия истинны. "
            "Другой пример: (False and True) вернет False, так как первое условие ложно."
        )
    },
    44: {
        "question": "Какой будет результат выполнения следующего кода: if 3 in 1, 2, 3: print(\"Содержится\")?",
        "answer_1": "Содержится",
        "answer_2": "Не содержится",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_3",
        "explanation": (
            "В данном коде есть ошибка синтаксиса. Правильный код должен быть: if 3 in [1, 2, 3]:. "
            "Использование оператора in требует, чтобы после него следовал итерируемый объект, такой как список или кортеж. "
            "Если бы код был написан правильно, он бы вернул 'Содержится', так как 3 действительно содержится в списке [1, 2, 3]. "
            "Пример: if 2 in [1, 2, 3]: вернет True и выведет 'Содержится'."
        )
    },
    45: {
        "question": "Какой результат выполнения выражения (10 <= 10) and (3 < 2)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Первое условие (10 <= 10) истинно, так как 10 действительно равно 10. "
            "Однако второе условие (3 < 2) ложно, так как 3 не меньше 2. "
            "Оператор and возвращает True только если оба условия истинны, поэтому итоговое значение будет False. "
            "Пример: (5 > 3) and (2 < 4) вернет True, так как оба условия истинны."
        )
    },
    46: {
        "question": "Какой будет результат выполнения следующего кода: x = 10; y = 5; if x > y: x = y; print(x)?",
        "answer_1": "10",
        "answer_2": "5",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Условие x > y истинно, так как 10 больше 5. Однако в коде x = y присваивает значение y переменной x. "
            "Поэтому после выполнения кода x будет равно 5, и это значение будет выведено. "
            "Пример: если бы x было 3, то x не изменился бы, так как условие ложно, и вывод был бы 10."
        )
    },
    47: {
        "question": "Какой результат выполнения выражения (not (3 == 3) or (2 < 1))?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "3 == 3 возвращает True, а not True возвращает False. Второе условие (2 < 1) ложно, так как 2 не меньше 1. "
            "Таким образом, итоговое выражение будет False or False, что дает True, так как оператор or возвращает True, если хотя бы одно из условий истинно. "
            "Пример: (False or True) вернет True, так как одно из условий истинно."
        )
    },
    48: {
        "question": "Какой будет результат выполнения следующего кода: x = [1, 2, 3]; if 4 in x: print(\"Содержится\") else: print(\"Не содержится\")?",
        "answer_1": "Содержится",
        "answer_2": "Не содержится",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "Условие 4 in x ложно, так как 4 отсутствует в списке [1, 2, 3]. "
            "Поэтому выполнится блок else, и будет выведено 'Не содержится'. "
            "Пример: если бы x = [4, 5, 6], то 4 in x вернуло бы True, и было бы выведено 'Содержится'. "
            "Другой пример: if 2 in x: выведет 'Содержится', так как 2 находится в списке."
        )
    },
    49: {
        "question": "Какой будет результат выполнения выражения (True or (False and True))?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Первое условие True or (False and True) возвращает True, так как оператор or возвращает True, если хотя бы одно из условий истинно. "
            "В данном случае, True или (что-то) всегда будет True. "
            "Пример: (False or True) вернет True, так как одно из условий истинно. "
            "Другой пример: (False and True) вернет False, так как первое условие ложно."
        )
    },
    50: {
        "question": "Какой результат выполнения следующего кода: x = 3; y = 2; if x > y and y > 0: print(\"Верно\") else: print(\"Неверно\")?",
        "answer_1": "Верно",
        "answer_2": "Неверно",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Оба условия x > y и y > 0 истинны, так как 3 больше 2 и 2 больше 0. "
            "Поэтому выполнится блок if, и будет выведено 'Верно'. "
            "Пример: если бы x было 1, то результатом было бы 'Неверно', так как x не больше y. "
            "Другой пример: если y было бы -1, то также было бы 'Неверно', так как y не больше 0."
        )
    },
    51: {
        "question": "Какой будет результат выполнения кода: x = 5; if x == 5: print(\"Пять\"); if x > 3: print(\"Больше трех\")?",
        "answer_1": "Пять\nБольше трех",
        "answer_2": "Пять",
        "answer_3": "Больше трех",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Оба условия истинны, так как x равно 5, и x больше 3. "
            "Поэтому будет выведено 'Пять' и 'Больше трех'. "
            "Пример: если x = 2, то ничего не будет выведено, так как первое условие ложно. "
            "Другой пример: если x = 6, то будет выведено 'Пять' и 'Больше трех', так как оба условия истинны."
        )
    },
    52: {
        "question": "Какой будет результат выполнения выражения (not (True and False) or (2 >= 2))?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "В данном выражении сначала выполняется операция and. (True and False) возвращает False, "
            "так как оба операнда должны быть истинны для получения True. Затем оператор not инвертирует результат, "
            "поэтому not (True and False) возвращает True. "
            "Следующее условие (2 >= 2) также возвращает True, так как 2 действительно больше или равно 2. "
            "Оператор or возвращает True, если хотя бы одно из условий истинно, поэтому итоговое выражение будет True. "
            "Пример: (not (1 == 1) or (3 < 5)) вернет True, так как хотя бы одно условие истинно."
        )
    },
    53: {
        "question": "Какой результат выполнения следующего кода: x = 0; y = 10; if x < y: print(\"x меньше y\") if y > 5: print(\"y больше 5\")?",
        "answer_1": "x меньше y\ny больше 5",
        "answer_2": "x меньше y",
        "answer_3": "y больше 5",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "В этом коде, первое условие x < y проверяет, меньше ли x (который равен 0) числа y (которое равно 10). "
            "Поскольку 0 действительно меньше 10, будет выведено 'x меньше y'. "
            "Далее, выполняется второе условие y > 5, которое также истинно, так как 10 больше 5, "
            "поэтому будет выведено 'y больше 5'. "
            "Таким образом, вывод будет: 'x меньше y' и 'y больше 5'. "
            "Пример: если бы x было 12, то вывод не был бы выполнен, так как первое условие ложно."
        )
    },
    54: {
        "question": "Какой будет результат выполнения выражения (not (10 > 5) and (not (3 < 2)))?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "В данном выражении 10 > 5 возвращает True. "
            "Затем not True возвращает False. Второе условие (3 < 2) возвращает False, и not False возвращает True. "
            "Теперь у нас есть (False) and (True), что возвращает False, так как оператор and требует, чтобы оба условия были истинны. "
            "Пример: (not (5 < 3)) будет True, так как 5 не меньше 3, тогда как (not (2 > 1)) вернет False, так как 2 больше 1."
        )
    },
    55: {
        "question": "Какой результат выполнения следующего кода: x = 10; y = 20; if x < y: print(\"x меньше y\"); if y > 15: print(\"y больше 15\")?",
        "answer_1": "x меньше y\ny больше 15",
        "answer_2": "x меньше y",
        "answer_3": "y больше 15",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "В этом коде первое условие x < y проверяет, меньше ли x (10) числа y (20). "
            "Поскольку 10 меньше 20, будет выведено 'x меньше y'. "
            "Затем выполняется второе условие y > 15, которое также истинно, так как 20 больше 15, "
            "поэтому будет выведено 'y больше 15'. "
            "Таким образом, вывод будет: 'x меньше y' и 'y больше 15'. "
            "Пример: если бы y было 10, то выводилось бы только 'x меньше y', так как второе условие было бы ложным."
        )
    },
    56: {
        "question": "Какой будет результат выполнения выражения (3 != 3) or (10 > 5)?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Первое условие (3 != 3) ложно, так как 3 равно 3. Однако второе условие (10 > 5) истинно, "
            "так как 10 больше 5. Оператор or возвращает True, если хотя бы одно из условий истинно, "
            "поэтому итоговое выражение будет True. "
            "Пример: (5 > 4) or (1 < 0) вернет True, потому что первое условие истинно. "
            "Другой пример: (2 > 3) or (4 < 1) вернет False, так как оба условия ложны."
        )
    },
    57: {
        "question": "Какой результат выполнения следующего кода: x = -1; if x < 0: print(\"Отрицательное\"); if x < -1: print(\"Меньше -1\")?",
        "answer_1": "Отрицательное\nМеньше -1",
        "answer_2": "Отрицательное",
        "answer_3": "Меньше -1",
        "answer_4": "Ошибка",
        "answer_5": "None",
        "valid": "answer_1",
        "explanation": (
            "Первое условие x < 0 истинно, так как -1 меньше 0, поэтому будет выведено 'Отрицательное'. "
            "Второе условие x < -1 также истинно, так как -1 меньше -1, поэтому будет выведено 'Меньше -1'. "
            "Пример: если x было бы 1, то не было бы выведено ничего, так как первое условие ложно. "
            "Другой пример: если x = -2, то вывод был бы 'Отрицательное' и 'Меньше -1'."
        )
    },
    58: {
        "question": "Какой будет результат выполнения выражения (not (2 > 3) and (4 == 4))?",
        "answer_1": "True",
        "answer_2": "False",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_2",
        "explanation": (
            "В данном выражении 2 > 3 возвращает False, поэтому not (2 > 3) возвращает True. "
            "Однако 4 == 4 возвращает True. Таким образом, итоговое выражение будет True and True, что дает True. "
            "Пример: (not (5 < 3)) вернет True, так как 5 не меньше 3. "
            "Другой пример: (not (10 > 5)) вернет False, так как 10 больше 5."
        )
    },
    60: {
        "question": "Какой результат выполнения следующего кода: x = [1, 2, 3]; if 2 in x: print(\"Два в списке\")?",
        "answer_1": "Два в списке",
        "answer_2": "Не выводится",
        "answer_3": "Ошибка",
        "answer_4": "None",
        "answer_5": "0",
        "valid": "answer_1",
        "explanation": (
            "Условие 2 in x истинно, так как 2 присутствует в списке [1, 2, 3], поэтому будет выведено 'Два в списке'. "
            "Пример: если бы x было [4, 5, 6], то 2 in x вернуло бы False, и ничего бы не выведено. "
            "Другой пример: if 1 in [1, 2, 3]: выведет 'Два в списке', так как 1 находится в списке."
        )
    },
}
